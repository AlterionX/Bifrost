#Intermediate Representation Generation
scopein
__F_hello0:
scopein
scopein
scopein
_v0 = 5 * 50
_v1 = 79 + 1
_v2 = 6 * _v1
_v3 = _v0 + _v2
_v4 = 0 - 50
_v5 = _v3 - _v4
var_dec 8 -> x
x <- _v5
callbegin
_v6 = call hell
callrestore
var_dec 8 -> z
z <- _v6
callbegin
_v7 = 0 - 1
push _v7
_v8 = call heaven
callrestore
var_dec 8 -> k
k <- _v8
_v9 = z + k
var_dec 8 -> y
y <- _v9
scopein
y <- 0
scopeout
__FOR_LOOP0:
var_dec 8 -> i
i <- 0
__LOOP_COND1:
_v10 = i > 54
IFZ  hop __LOOP_END1
hop __LOOP_START1
__LOOP_TRAILING:
_v11 = i + 1
i <- _v11
hop __LOOP_COND1
__LOOP_START1:
scopein
callbegin
_v12 = call hell
callrestore
var_dec 8 -> f
f <- _v12
scopeout
hop __LOOP_COND1
__LOOP_END1:
scopeout
return
scopeout
scopeout
scopein
__F_heaven1:
scopein
scopein
scopein
__IF_START1:
_v13 = h == 1
IFZ _v13 hop __ENDIF2
scopein
return 1
scopeout
__ENDIF2:
__IF_START2:
_v14 = h > 1
IFZ _v14 hop __ELSE_START3
scopein
return 5
scopeout
hop __ENDIF3:
__ELSE_START3:
scopein
callbegin
_v15 = call hell
callrestore
return _v15
scopeout
__ENDIF3:
scopeout
return
scopeout
scopeout
scopein
__F_hell2:
scopein
scopein
scopein
return 0
scopeout
return
scopeout
scopeout